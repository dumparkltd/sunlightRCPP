source("~/git/inrae/sunlightRCPP/R/precalcAltitudes.R")
precalcAltitudes(azimuthStep = 90, correctCurvature = FALSE)
precalcAltitudes(azimuthStep = 90, correctCurvature = TRUE)
.rs.restartR()
library(sunlightRCPP)
precalcAltitudeDistances(azimuthMin = 56 azimuthMax = 57, azimuthStep = 90, correctCurvature = FALSE)
precalcAltitudeDistances(azimuthMin = 56, azimuthMax = 57, azimuthStep = 90, correctCurvature = FALSE)
source("~/git/inrae/sunlightRCPP/R/precalcAltitudeDistances.R")
precalcAltitudeDistances(azimuthMin = 56, azimuthMax = 57, azimuthStep = 90, correctCurvature = FALSE)
source("~/git/inrae/sunlightRCPP/R/calculateMinAltitudeDistances.R")
source("~/git/inrae/sunlightRCPP/R/calculateMinAltitudeDistances.R")
precalcAltitudeDistances(azimuthMin = 56, azimuthMax = 57, azimuthStep = 90, correctCurvature = FALSE)
source("~/git/inrae/sunlightRCPP/R/calculateMinAltitudeDistances.R")
precalcAltitudeDistances(azimuthMin = 56, azimuthMax = 57, azimuthStep = 90, correctCurvature = FALSE)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
precalcAltitudeDistances(azimuthMin = 56, azimuthMax = 57, azimuthStep = 90, correctCurvature = FALSE)
source("~/git/inrae/sunlightRCPP/R/calculateMinAltitudeDistances.R")
precalcAltitudeDistances(azimuthMin = 56, azimuthMax = 57, azimuthStep = 90, correctCurvature = FALSE)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
precalcAltitudes(azimuthMin = 56, azimuthMax = 57, azimuthStep = 90, correctCurvature = FALSE)
deg2rad(56)
deg2rad(45)
deg2rad(90)
deg2rad(90-56)
tan(deg2rad(90-56))
tan(deg2rad(56))
tan(deg2rad(0))
135 %% 90
35 %% 90
5 %% 90
.rs.restartR()
library(sunlightRCPP)
precalcAltitudes(azimuthMin = 56, azimuthMax = 57, azimuthStep = 90, correctCurvature = FALSE)
raster::writeRaster(
r,
filename=paste(outDir, outFilename, sep=""),
format="GTiff",
overwrite=TRUE
)
precalcAltitudes(azimuthMin = 56, azimuthMax = 57, azimuthStep = 90, correctCurvature = FALSE)
precalcAltitudes(azimuthStep = 5, correctCurvature = FALSE)
Sys.time()
as.numeric(Sys.time())*1000, digits=15)
as.numeric(Sys.time())*1000
print(as.numeric(Sys.time())*1000, digits=15)
round(print(as.numeric(Sys.time())*1000, digits=15))
print(as.numeric(Sys.time())*1000, digits=10)
print(as.numeric(Sys.time())*1000, digits=12)
print(as.numeric(Sys.time())*1000, digits=13)
print(as.numeric(Sys.time())*1000, digits=14)
print(as.numeric(Sys.time())*1000, digits=12)
precalcAltitudeDistances(azimuthStep = 210, correctCurvature = FALSE)
.rs.restartR()
precalcAltitudeDistances(azimuthMin = 60, azimuthMax = 270, azimuthStep = 210, correctCurvature = FALSE)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
precalcAltitudeDistances(azimuthMin = 60, azimuthMax = 270, azimuthStep = 210, correctCurvature = FALSE)
precalcAltitudes(azimuthMin = 60, azimuthMax = 270, azimuthStep = 210, correctCurvature = FALSE)
precalcAltitudes(azimuthMin = 60, azimuthMax = 270, azimuthStep = 210, correctCurvature = FALSE)
precalcAltitudes(azimuthMin = 60, azimuthMax = 270, azimuthStep = 210, correctCurvature = FALSE)
library(meteo)
library("meteo")
install.packages("meteo")
library("meteo")
demFileAndPath
dem_original = raster::raster(demFileAndPath)
dem_original
meteo::tiling(filename=dem_original, tilesize = 2000, overlapping = 200, tilename=tools::file_path_sans_ext(dem), asfiles = TRUE, tiles_folder = "~/projects/INRAE/data/tiles/')
)
"
)
meteo::tiling(filename=dem_original, tilesize = 2000, overlapping = 200, tilename=tools::file_path_sans_ext(dem), asfiles = TRUE, tiles_folder = "~/projects/INRAE/data/tiles/")
dem = "dem2.tif"
\demDir = "~/projects/INRAE/data/",
demDir = "~/projects/INRAE/data/",
demDir = "~/projects/INRAE/data/"
demFileAndPath = paste(demDir, dem, sep="")
print(paste(Sys.time(), " - ", "loading dem: ", dem, " from: ", demFileAndPath, sep=""))
dem_original = raster::raster(demFileAndPath)
if (raster::xres(dem_original) != targetResolution) {
print(paste("re-sampling dem: ", targetResolution, sep = ""))
# re-sample original raster
dem_at_res <- raster::aggregate(
dem_original,
fact = targetResolution / raster::xres(dem_original)
)
} else {
dem_at_res <- dem_original
}
targetResolution = 12.5
if (raster::xres(dem_original) != targetResolution) {
print(paste("re-sampling dem: ", targetResolution, sep = ""))
# re-sample original raster
dem_at_res <- raster::aggregate(
dem_original,
fact = targetResolution / raster::xres(dem_original)
)
} else {
dem_at_res <- dem_original
}
dem_at_res
tiles = meteo::tiling(filename=dem_original, tilesize = 200, overlapping = 10, aspoints = TRUE)
tiles
dem_at_res
tiles = meteo::tiling(filename=dem_original, tilesize = 200, overlapping = 10)
tiles
tiles[1]
tiles[10]
xmin(tiles[1])
xmin(dem_at_res)
tiles[1]
tiles[[1]
]
xmin(tiles[[1])
xmin(tiles[[1]])
xmin(dem_at_res)
xmin(tiles[[64]])
xmax(tiles[[64]])
xmax(dem_at_res)
install.packages('rgdal')
install.packages("rgdal")
tiles[[1]]
tiles[]
raster::stack(tiles)
list(tiles)
list(tiles[])
names(tiles)[1:2] <- c('x', 'y')
tiles = meteo::tiling(filename=dem_original, tilesize = 200, overlapping = 10)
warnings()
x <- tiles
names(x)[1:2] <- c('x', 'y')
x$fun <- max
x$na.rm <- TRUE
y <- do.call(raster::mosaic, x)
y
dem_at_res
xres(dem_at_res)
nrow(dem_at_res)
raster::nrow(dem_at_res)
tiles = meteo::tiling(filename=dem_original, tilesize = 2000, overlapping = 10)
dem_at_res
precalcAltitudes(dem = "zi_dtm_12_5_complete_cutlim.tif", azimuthMin = 60, azimuthMax = 60)
.rs.restartR()
library(sunlightRCPP)
precalcAltitudes(dem = "zi_dtm_12_5_complete_cutlim.tif", azimuthMin = 60, azimuthMax = 60)
source("~/git/inrae/sunlightRCPP/R/precalcAltitudeDistances.R")
precalcAltitudes(dem = "zi_dtm_12_5_complete_cutlim.tif", azimuthMin = 60, azimuthMax = 60, targetResolution = 1250)
precalcAltitudes(dem = "zi_dtm_12_5_complete_cutlim.tif", azimuthMin = 60, azimuthMax = 60, targetResolution = 625)
precalcAltitudes(dem = "zi_dtm_12_5_complete_cutlim.tif", azimuthMin = 60, azimuthMax = 60, targetResolution = 125)
source("~/git/inrae/sunlightRCPP/R/precalcAltitudes.R")
.rs.restartR()
library(sunlightRCPP)
precalcAltitudes(dem = "zi_dtm_12_5_complete_cutlim.tif", azimuthMin = 60, azimuthMax = 60, targetResolution = 125)
precalcAltitudes(dem = "zi_dtm_12_5_complete_cutlim.tif", azimuthMin = 60, azimuthMax = 60, targetResolution = 25)
precalcAltitudes(dem = "zi_dtm_12_5_complete_cutlim.tif", azimuthMin = 60, azimuthMax = 60, targetResolution = 62.5)
precalcAltitudes(dem = "zi_dtm_12_5_complete_cutlim.tif", azimuthMin = 60, azimuthMax = 60, targetResolution = 50)
source("~/git/inrae/sunlightRCPP/R/precalcAltitudes.R")
source("~/git/inrae/sunlightRCPP/R/precalcAltitudes.R")
precalcAltitudes(dem = "zi_dtm_12_5_complete_cutlim.tif", azimuthMin = 60, azimuthMax = 60, targetResolution = 50)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
.rs.restartR()
library(sunlightRCPP)
dem = "zi_dtm_12_5_complete_cutlim.tif"
demDir = "~/projects/INRAE/data/"
demFileAndPath = paste(demDir, dem, sep="")
dem_original = raster::raster(demFileAndPath)
dem_at_res <- raster::aggregate(
dem_original,
fact = 650 / raster::xres(dem_original)
)
get_dxdy_for_azimuth(dem=dem_at_res, azimuth = 60)
get_dxdy_for_azimuth_cpp(dem=dem_at_res, azimuth = 60)
get_dxdy_for_azimuth_cpp
get_dxdy_for_azimuth_cpp()
using namespace Rcpp;
get_altitudes_for_azimuth_cpp()
devtools::load_all(".")
get_dxdy_for_azimuth_cpp(dem=dem_at_res, azimuth = 60)
get_dxdy_for_azimuth_cpp(dem_at_res, azimuth = 60)
get_dxdy_for_azimuth_cpp(dem_at_res, 60)
dem_at_res
get_altitudes_for_azimuth_cpp(
as.matrix(dem_at_res),
azimuth)
get_altitudes_for_azimuth_cpp(
as.matrix(dem_at_res),
60)
get_dxdy_for_azimuth_cpp(
as.matrix(dem_at_res),
60)
.rs.restartR()
library(sunlightRCPP)
devtools::load_all(".")
get_dxdy_for_azimuth_cpp(
as.matrix(dem_at_res),
60,
650)
dem = "zi_dtm_12_5_complete_cutlim.tif"
demFileAndPath = paste(demDir, dem, sep="")
dem_original = raster::raster(demFileAndPath)
dem_at_res <- raster::aggregate(
dem_original,
fact = 625 / raster::xres(dem_original)
)
dem_at_res
dem_at_res(311,1)
dem_at_res[311,1]
as.matrix(dem_at_res)
as.matrix(dem_at_res)[311,1]
as.matrix(dem_at_res)[311,2]
.rs.restartR()
library(sunlightRCPP)
devtools::load_all(".")
dem = "zi_dtm_625_complete_cutlim.tif"
demFileAndPath = paste(demDir, dem, sep="")
demDir = "~/projects/INRAE/data/"
get_dxdy_for_azimuth_cpp(dem=dem, azimuth = 60, resolution = 625)
dem = "zi_dtm_625_complete_cutlim.tif"
demFileAndPath = paste(demDir, dem, sep="")
demDir = "~/projects/INRAE/data/"
get_dxdy_for_azimuth_cpp(dem, 60, 625)
dem = "zi_dtm_625_complete_cutlim.tif"
demFileAndPath = paste(demDir, dem, sep="")
demDir = "~/projects/INRAE/data/"
get_dxdy_for_azimuth_cpp(as.matrix(dem), 60, 625)
get_dxdy_for_azimuth_cpp(
as.matrix(dem_at_res),
60,
625)
get_dxdy_for_azimuth_cpp(
as.matrix(dem),
60,
625)
get_dxdy_for_azimuth_cpp(
as.matrix(dem),
60, 625)
devtools::load_all(".")
get_dxdy_for_azimuth_cpp(
as.matrix(dem),
60, 625)
Rcpp::compileAttributes()
get_dxdy_for_azimuth_cpp(
as.matrix(dem),
60, 625)
devtools::load_all(".")
get_dxdy_for_azimuth_cpp(
as.matrix(dem),
60, 625)
load_all()
devtools::load_all(".")
.rs.restartR()
library(sunlightRCPP)
devtools::load_all(".")
get_dxdy_for_azimuth_cpp(
as.matrix(dem),
60, 625)
source(get_dxdy_for_azimuth_cpp)
get_dxdy_for_azimuth_cpp
dem = "zi_dtm_625_complete_cutlim.tif"
demFileAndPath = paste(demDir, dem, sep="")
demDir = "~/projects/INRAE/data/"
get_dxdy_for_azimuth_cpp(dem, 60, 625)
get_dxdy_for_azimuth_cpp(as.matrix(dem), 60, 625)
get_dxdy_for_azimuth_cpp(as.matrix(dem), 60)
get_dxdy_for_azimuth_cpp(as.matrix(dem), 60, 625)
get_dxdy_for_azimuth_cpp(as.matrix(dem), 60, 625.0)
get_dxdy_for_azimuth_cpp(as.matrix(dem), 60.0, 625.0)
dem
dem = "zi_dtm_625_complete_cutlim.tif"
demDir = "~/projects/INRAE/data/"
demFileAndPath = paste(demDir, dem, sep="")
dem_original = raster::raster(demFileAndPath)
get_dxdy_for_azimuth_cpp(as.matrix(dem), 60, 625)
dem = "zi_dtm_625_complete_cutlim.tif"
demDir = "~/projects/INRAE/data/"
demFileAndPath = paste(demDir, dem, sep="")
dem_original = raster::raster(demFileAndPath)
get_dxdy_for_azimuth_cpp(as.matrix(dem_original), 60, 625)
.rs.restartR()
library(sunlightRCPP)
dem = "zi_dtm_625_complete_cutlim.tif"
demDir = "~/projects/INRAE/data/"
demFileAndPath = paste(demDir, dem, sep="")
dem_original = raster::raster(demFileAndPath)
get_altitude_distance_for_azimuth_cpp(as.matrix(dem_original), 60, 625)
get_altitude_distance_for_azimuth_cpp(as.matrix(dem_original), 60, 0, 625, 0)
res = get_altitude_distance_for_azimuth_cpp(as.matrix(dem_original), 60, 0, 625, 0)
raster::raster(
nrows = raster::nrow(dem_original),
ncols = raster::ncol(dem_original),
ext = raster::extent(dem_original),
res = raster::res(dem_original),
crs = raster::crs(dem_original),
vals = res
)
precalcAltitudeDistances(dem=dem, demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625)
precalcAltitudes(dem=dem, demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625)
radiusEarth = 637100
circumferenceEarth = 2 * pi * radiusEarth;
circumferenceEarth
anglePerUnit = 360 / circumferenceEarth
anglePerUnit
totalAngle = anglePerUnit * 170000
totalAngle
radiusEarth * (1 - cos(deg2rad(totalAngle)))
circumferenceEarth
radiusEarth = 6371000
circumferenceEarth
circumferenceEarth = 2 * pi * radiusEarth;
circumferenceEarth
anglePerUnit
anglePerUnit = 360 / circumferenceEarth
totalAngle = anglePerUnit * 170000
totalAngle
radiusEarth * (1 - cos(deg2rad(totalAngle)))
elevDiffStep = 2500
altitudeStep = rad2deg(atan(elevDiffStep / 170000))
altitudeStep
elevDiffStep = 2500 - radiusEarth * (1 - cos(deg2rad(totalAngle)))
altitudeStep = rad2deg(atan(elevDiffStep / 170000))
altitudeStep
altitudeMax = rad2deg(atan(elevationMaxDiff / 170000));
elevationMaxDiff = 3000
altitudeMax = rad2deg(atan(elevationMaxDiff / 170000));
altitudeMax
altitudeMax = rad2deg(atan((elevationMaxDiff - radiusEarth * (1 - cos(deg2rad(totalAngle)))) / 170000));
altitudeMax
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
dem = "zi_dtm_625_complete_cutlim.tif"
demDir = "~/projects/INRAE/data/"
demFileAndPath = paste(demDir, dem, sep="")
dem_original = raster::raster(demFileAndPath)
devtools::load_all(".")
precalcAltitudes(dem=dem, demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE)
precalcAltitudes(dem=dem, demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = FALSE)
precalcAltitudes(dem=dem, demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = FALSE)
.rs.restartR()
library(sunlightRCPP)
devtools::load_all(".")
precalcAltitudes(dem=dem, demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = FALSE)
.rs.acCompletionTypes
.rs.restartR()
library(sunlightRCPP)
dem = "zi_dtm_625_complete_cutlim.tif"
demDir = "~/projects/INRAE/data/"
demFileAndPath = paste(demDir, dem, sep="")
dem_original = raster::raster(demFileAndPath)
precalcAltitudes(dem=dem, demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = FALSE)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
devtools::load_all(".")
dem = "zi_dtm_625_complete_cutlim.tif"
demDir = "~/projects/INRAE/data/"
demFileAndPath = paste(demDir, dem, sep="")
dem_original = raster::raster(demFileAndPath)
precalcAltitudes(dem=dem, demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = FALSE)
precalcAltitudes(dem=dem, demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE)
precalcAltitudes(dem=dem, demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE)
precalcAltitudes(dem=dem, demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE)
.rs.restartR()
library(sunlightRCPP)
precalcAltitudes(dem=dem, demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE)
radiusEarth = 6371000
anglePerUnit = 0.009
totalAngle = anglePerUnit * distance
totalAngle = anglePerUnit * 50000
totalAngle
radiusEarth * (1 - cos(deg2rad(totalAngle)))
anglePerUnit = 0.000009
totalAngle = anglePerUnit * distance
totalAngle = anglePerUnit * 50000
radiusEarth * (1 - cos(deg2rad(totalAngle)))
.rs.restartR()
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
dem = "zi_dtm_625_complete_cutlim.tif"
demDir = "~/projects/INRAE/data/"
precalcAltitudes(dem=dem, demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
dem = "zi_dtm_625_complete_cutlim.tif"
demDir = "~/projects/INRAE/data/"
precalcAltitudeDistances(dem=dem, demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = FALSE)
precalcAltitudeDistances(dem=dem, demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE)
source("~/git/inrae/sunlightRCPP/R/precalcAltitudeDistances.R")
source("~/git/inrae/sunlightRCPP/R/precalcAltitudes.R")
.rs.restartR()
dem = "zi_dtm_625_complete_cutlim.tif"
demDir = "~/projects/INRAE/data/"
precalcAltitudes(dem=dem, demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE)
precalcAltitudes(dem=dem, demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = FALSE)
.rs.restartR()
source("~/git/inrae/sunlightRCPP/R/precalcAltitudes.R")
source("~/git/inrae/sunlightRCPP/R/precalcAltitudes.R")
.rs.restartR()
library(sunlightRCPP)
dem = "zi_dtm_625_complete_cutlim.tif"
demDir = "~/projects/INRAE/data/"
precalcAltitudes(dem=dem, demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
precalcAltitudes(dem=dem, demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE)
dem = "zi_dtm_625_complete_cutlim.tif"
demDir = "~/projects/INRAE/data/"
demFileAndPath = paste(demDir, dem, sep="")
dem_original = raster::raster(demFileAndPath)
get_dxdy_for_azimuth_cpp(as.matrix(dem_original), 60, 625)
.rs.restartR()
precalcAltitudes(dem=dem, demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
precalcAltitudes(dem=dem, demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE)
source("~/git/inrae/sunlightRCPP/R/precalcAltitudes.R")
source("~/git/inrae/sunlightRCPP/R/precalcAltitudeDistances.R")
source("~/git/inrae/sunlightRCPP/R/precalcAltitudes.R")
.rs.restartR()
.rs.restartR()
.rs.restartR()
.rs.restartR()
precalcAltitudes(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE)
devtools::load_all(".")
precalcAltitudes(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE)
precalcAltitudes(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE, sampleIncFactor = 1.05)
precalcAltitudes(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE, sampleIncFactor = 1.07)
precalcAltitudeDistances(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE, sampleIncFactor = 1)
source("~/git/inrae/sunlightRCPP/R/calculateMinAltitudeDistances.R")
precalcAltitudeDistances(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE, sampleIncFactor = 1)
precalcAltitudeDistances(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE, sampleIncFactor = 1.03)
.rs.restartR()
library(sunlightRCPP)
precalcAltitudeDistances(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE, sampleIncFactor = 1)
.rs.restartR()
.rs.restartR()
precalcAltitudeDistances(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE, sampleIncFactor = 1)
library(sunlightRCPP)
precalcAltitudeDistances(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE, sampleIncFactor = 1)
precalcAltitudeDistances(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE, sampleIncFactor = 1.01)
precalcAltitudeDistances(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE, sampleIncFactor = 1.02)
precalcAltitudeDistances(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE, sampleIncFactor = 1.03)
precalcAltitudeDistances(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE, sampleIncFactor = 1.04)
precalcAltitudes(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE, sampleIncFactor = 1.04)
precalcAltitudes(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE, sampleIncFactor = 1)
print(as.numeric(Sys.time())*1000, digits=12)
as.numeric(Sys.time())*1000
as.string(as.numeric(Sys.time())*1000)
as.character(as.numeric(Sys.time())*1000)
as.character(as.numeric(Sys.time())*1000, digits=12)
as.character(as.numeric(Sys.time())*1000, digits=10)
as.character(as.numeric(Sys.time())*1000, digits=9)
as.character(as.numeric(Sys.time())*100000)
source("~/git/inrae/sunlightRCPP/R/precalcAltitudes.R")
source("~/git/inrae/sunlightRCPP/R/precalcAltitudeDistances.R")
source("~/git/inrae/sunlightRCPP/R/precalcAltitudeDistances.R")
source("~/git/inrae/sunlightRCPP/R/precalcAltitudes.R")
precalcAltitudes(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE, sampleIncFactor = 1.03)
precalcAltitudes(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE, sampleIncFactor = 1)
precalcAltitudes(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = TRUE, sampleIncFactor = 1.02)
precalcAltitudes(dem='zi_dtm_125_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=125, correctCurvature = TRUE, sampleIncFactor = 1)
precalcAltitudes(dem='zi_dtm_125_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=125, correctCurvature = FALSE, sampleIncFactor = 1)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
precalcAltitudes(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=125, correctCurvature = FALSE, sampleIncFactor = 1.04)
precalcAltitudes(dem='zi_dtm_125_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=125, correctCurvature = FALSE, sampleIncFactor = 1.04)
precalcAltitudes(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = FALSE, sampleIncFactor = 1.04)
precalcAltitudes(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = FALSE, sampleIncFactor = 1)
precalcAltitudes(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = FALSE, sampleIncFactor = 1.05)
precalcAltitudes(dem='zi_dtm_625_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=625, correctCurvature = FALSE, sampleIncFactor = 1.03)
precalcAltitudes(dem='zi_dtm_125_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=125, correctCurvature = FALSE, sampleIncFactor = 1.03)
precalcAltitudes(dem='zi_dtm_125_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=125, correctCurvature = FALSE, sampleIncFactor = 1)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
precalcAltitudes(dem='zi_dtm_125_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=125, correctCurvature = FALSE, sampleIncFactor = 1)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
precalcAltitudes(dem='zi_dtm_125_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=125, correctCurvature = FALSE, sampleIncFactor = 1.04)
precalcAltitudes(dem='zi_dtm_50_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=50, correctCurvature = FALSE, sampleIncFactor = 1.03)
precalcAltitudes(dem='zi_dtm_50_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=50, correctCurvature = FALSE, sampleIncFactor = 1.04)
precalcAltitudes(dem='zi_dtm_50_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=50, correctCurvature = FALSE, sampleIncFactor = 1.02)
precalcAltitudes(dem='zi_dtm_50_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=50, correctCurvature = FALSE, sampleIncFactor = 1)
precalcAltitudes(dem='zi_dtm_50_complete_cutlim__TEST.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=50, correctCurvature = FALSE, sampleIncFactor = 1)
dem='zi_dtm_50_complete_cutlim__TEST.tif'
demFileAndPath = paste(demDir, dem, sep="")
dem_original = raster::raster(demFileAndPath)
raster::xres(dem_original)
precalcAltitudes(dem='zi_dtm_50_complete_cutlim__TEST.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=50, correctCurvature = FALSE, sampleIncFactor = 1)
precalcAltitudes(dem='zi_dtm_50_complete_cutlim__TEST.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=50, correctCurvature = FALSE, sampleIncFactor = 1.04)
precalcAltitudes(dem='zi_dtm_50_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=50, correctCurvature = FALSE, sampleIncFactor = 1.08)
precalcAltitudes(dem='zi_dtm_50_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=50, correctCurvature = FALSE, sampleIncFactor = 1.04)
precalcAltitudes(dem='zi_dtm_50_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=50, correctCurvature = FALSE, sampleIncFactor = 1)
precalcAltitudes(dem='zi_dtm_50_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=50, correctCurvature = FALSE, sampleIncFactor = 1.02)
precalcAltitudes(dem='zi_dtm_50_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=50, correctCurvature = FALSE, sampleIncFactor = 1.05)
precalcAltitudes(dem='zi_dtm_50_complete_cutlim.tif', demDir=demDir, azimuthMin=60, azimuthMax=60, targetResolution=50, correctCurvature = FALSE, sampleIncFactor = 1.01)
