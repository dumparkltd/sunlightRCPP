source("~/git/inrae/sunlightRCPP/R/sunlight.R")
Rcpp.compileAttributes()
library(sunlightRCPP)
library(sunlightRCPP)
result <- list()
result[['10']] <- 'test'
names(result)
source("~/git/inrae/sunlightRCPP/R/sunlight.R")
.rs.restartR()
library(sunlightRCPP)
source("~/git/inrae/sunlightRCPP/R/sunlight.R")
.rs.restartR()
library(sunlightRCPP)
sunlight(azimuthMin = 210, azimuthMax = 210)
source("~/git/inrae/sunlightRCPP/R/sunlight.R")
sunlight(azimuthMin = 210, azimuthMax = 210)
source("~/git/inrae/sunlightRCPP/R/sunlight.R")
sunlight(azimuthMin = 210, azimuthMax = 210)
strsplit('a.x', ".")
strsplit("a.x", ".")
b strsplit("a.x", ".")
b <- strsplit("a.x", ".")
b
b <- str_split("a.x", ".")
b <- str_split("a.x", split = ".")
b <- strsplit("a.x", split = ".")
b
b <- strsplit("a.x.b.d.f.g.", split = ".")
b
df<-"get%better%every%day"
strsplit(df,split = '%')
df<-"get.better.every.day"
strsplit(df,split = '.')
file_path_sans_ext
tools::file_path_sans_ext("a.b")
dem = "raster1.tif"
demDir = "~/projects/INRAE/data/"
demFileAndPath = paste(demDir, dem, sep="")
dem_original = raster::raster(demFileAndPath)
dem_original
names(raster)
names(dem_original)
source("~/git/inrae/sunlightRCPP/R/sunlight.R")
source("~/git/inrae/sunlightRCPP/R/sunlight.R")
sunlight(azimuthMin = 210, azimuthMax = 210)
source("~/git/inrae/sunlightRCPP/R/sunlight.R")
source("~/git/inrae/sunlightRCPP/R/sunlight.R")
sunlight(azimuthMin = 210, azimuthMax = 210)
source("~/git/inrae/sunlightRCPP/R/sunlight.R")
sunlight(azimuthMin = 210, azimuthMax = 210)
sunlight(azimuthMin = 120, azimuthMax = 120)
sunlight(azimuthMin = 120, azimuthMax = 120, targetResolution = 100)
source("~/git/inrae/sunlightRCPP/R/sunlight.R")
use_r('horizons')
usethis::use_r('horizons')
usethis::use_r('altitudes')
usethis::use_r('hasShade')
View(dem_original)
dem_original
a <- "a b"
gsub(" ", "-", a)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
altitudes()
altitudes()
.rs.restartR()
library(sunlightRCPP)
altitudes()
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
hasShade()
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
hasShade()
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
hasShade()
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
hasShade()
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
doShades()
hasShade()
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
hasShade()
source("~/git/inrae/sunlightRCPP/R/doShades.R")
source("~/git/inrae/sunlightRCPP/R/doShades.R")
hasShade()
source("~/git/inrae/sunlightRCPP/R/doShades.R")
hasShade()
View(dem_original)
View(dem_original)
View(dem_original)
dem = "raster1.tif"
demDir = "~/projects/INRAE/data/"
timeUTC = '2022-08-20 11:45:00'
altitudesDir = "~/projects/INRAE/data/altitudes/RCPP/"
outDir = "~/projects/INRAE/data/shademaps/RCPP/"
azimuthStep = 1
targetResolution = 10
demFileAndPath = paste(demDir, dem, sep="")
dem_original = raster::raster(demFileAndPath)
latlon <- as.data.frame(
sp::spTransform(
raster::xyFromCell(dem_original,c(1),spatial=TRUE),
sp::CRS("+proj=longlat")
)
)
lon = latlon$x
lat = latlon$y
datetime <- as.POSIXct(timeUTC,  tz = "UTC");
sun_position <- suncalc::getSunlightPosition(
date= datetime,
lat = lat,
lon = lon,
keep = c( "azimuth", "altitude")
)
azimuth = round(rad2deg(sun_position$azimuth)+180)
altitude = rad2deg(sun_position$altitude)
azimuth = round(azimuth / azimuthStep) * azimuthStep
altFilename = paste(
"azimuth-", azimuth,
"_dem-", tools::file_path_sans_ext(dem),
"_resolution-", targetResolution,
".tif",
sep=""
)
altFile = paste(altitudesDir, altFilename, sep="")
altFile
altitudes <- raster::raster(altFile)
altitudes
hasShade()
Rcpp::compileAttributes()
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
hasShade()
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
.rs.restartR()
library(sunlightRCPP)
hasShade()
Rcpp::compileAttributes()
get_shades_for_altitudes_cpp()
library(sunlightRCPP)
.rs.restartR()
.rs.restartR()
hasShade()
library(sunlightRCPP)
rad2deg
hasShade()
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
hasShade()
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
hasShade()
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
hasShade()
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
hasShade()
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
hasShade()
rad2deg(1.03725)
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
hasShade()
altitudes(dem = "dem2.tif", targetResolution = 12.5)
demFileAndPath
raster::raster(demFileAndPath)
xres(dem_original)
source("~/git/inrae/sunlightRCPP/R/altitudes.R")
altitudes(dem = "dem2.tif", targetResolution = 12.5)
hasShade(dem = "dem2.tif", timeUTC = '2022-08-21 8:56:00')
hasShade(dem = "dem2.tif", timeUTC = '2022-08-21 8:56:00', targetResolution = 12.5)
currentTs <- Sys.time(
)
elapsed <- Sys.time() - currentTs
elapsed
Sys.time()
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
hasShade(dem = "dem2.tif", timeUTC = '2022-08-21 8:56:00', targetResolution = 12.5)
elapsed
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
hasShade(dem = "dem2.tif", timeUTC = '2022-08-21 8:56:00', targetResolution = 12.5)
hasShade(dem = "dem2.tif", timeUTC = '2022-08-21 6:56:00', targetResolution = 12.5)
dem <- raster("~/projects/INRAE/data/dem2.tif")
dem
library(insol)
install(insol)
install.packages(insol)
install.packages("insol")
install("insol")
library("insol")
hasShade()
library(sunlightRCPP)
hasShade()
hasShade(dem = "dem1.tif", targetResolution = 12.5, timeUTC = "2022-08-21 6:56:00")
hasShade(dem = "dem2.tif", targetResolution = 12.5, timeUTC = "2022-08-21 6:56:00")
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
hasShade(dem = "dem2.tif", targetResolution = 12.5, timeUTC = "2022-08-21 6:56:00")
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
#'@title Calculate shades for a dem and a given time (UTC)
#'
#'@description Determines shades for each cell based on pre-calculated altitude raster files for a given time
#'
#'@useDynLib sunlightRCPP, .registration = TRUE
#'@importFrom Rcpp evalCpp
#'@import suncalc
#'@import raster
#'@import sp
#'@export
hasShade = function(
dem = "raster1.tif",
demDir = "~/projects/INRAE/data/",
timeUTC = '2022-08-20 9:45:00',
altitudesDir = "~/projects/INRAE/data/altitudes/RCPP/",
outDir = "~/projects/INRAE/data/shademaps/RCPP/",
azimuthStep = 1,
targetResolution = 10
) {
# 1. figure out sun position based on input raster
# load raster
demFileAndPath = paste(demDir, dem, sep="")
print(paste(Sys.time(), " - ", "loading dem: ", dem, "from: ", demFileAndPath, sep=""))
dem_original = raster::raster(demFileAndPath)
# figure out min/max azimuth
latlon <- as.data.frame(
sp::spTransform(
raster::xyFromCell(dem_original,c(1),spatial=TRUE),
sp::CRS("+proj=longlat")
)
)
lon = latlon$x
lat = latlon$y
print(paste(lon, lat, sep=" "))
datetime <- as.POSIXct(timeUTC,  tz = "UTC");
sun_position <- suncalc::getSunlightPosition(
date= datetime,
lat = lat,
lon = lon,
keep = c( "azimuth", "altitude")
)
print(sun_position)
azimuth = round(rad2deg(sun_position$azimuth)+180)
altitude = rad2deg(sun_position$altitude)
azimuth = round(azimuth / azimuthStep) * azimuthStep
print(paste(Sys.time(), " - ", "assumed sun position for given time. Azimuth (rounded): ", azimuth, " Altitude (degrees): ", altitude, sep = ""))
# 2. load corresponding altitudes file
altFilename = paste(
"azimuth-", azimuth,
"_dem-", tools::file_path_sans_ext(dem),
"_resolution-", targetResolution,
".tif",
sep=""
)
altFile = paste(altitudesDir, altFilename, sep="")
print(paste(Sys.time(), " - ", "loading altitude file for given azimuth...", sep = ""))
altitudes <- raster::raster(altFile)
print(paste(Sys.time(), " - ", "calculating shades for altitude...", sep = ""))
startTS = Sys.time()
if (altitude > raster::maxValue(altitudes)) {
shades <- raster::raster(
nrows = raster::nrow(altitudes),
ncols = raster::ncol(altitudes),
ext = raster::extent(altitudes),
res = raster::res(altitudes),
crs = raster::crs(altitudes),
vals = 0
)
} else {
shadeMatrix <- get_shades_for_altitudes_cpp(
as.matrix(altitudes),
altitude
)
shades <- raster::raster(
nrows = raster::nrow(altitudes),
ncols = raster::ncol(altitudes),
ext = raster::extent(altitudes),
res = raster::res(altitudes),
crs = raster::crs(altitudes),
vals = shadeMatrix
)
}
endTS = Sys.time()
outFilename = paste(
"shade-",
gsub("-", "", gsub(":", "", gsub(" ", "_", timeUTC))),
"_azi-", azimuth,
"_alt-", round(altitude),
"_dem-", tools::file_path_sans_ext(dem),
"_resolution-", targetResolution,
"_", as.numeric(endTS),
".tif",
sep=""
)
outFile = paste(outDir, outFilename, sep="")
print(paste(Sys.time(), " - ", "shades calculated, writing raster file: ", outFile, sep = ""))
print(paste("Shade calculation took", endTS - startTS, "seconds", sep = " "))
raster::writeRaster(
shades,
filename=outFile,
format="GTiff",
overwrite=TRUE
)
}
hasShade(dem = "dem2.tif", targetResolution = 12.5, timeUTC = "2022-08-21 6:56:00")
hasShade(dem = "dem2.tif", timeUTC = '2022-08-21 6:56:00', targetResolution = 12.5)
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
hasShade(dem = "dem2.tif", timeUTC = '2022-08-21 6:56:00', targetResolution = 12.5)
alt = raster::raster("~/projects/INRAE/data/azimuth-90_dem-dem2_resolution-12.5.tif")
alt = raster::raster("~/projects/INRAE/data/altitudes/RCPP/azimuth-90_dem-dem2_resolution-12.5.tif")
alt
as.matrix(alt)
alt
plot(alt)
dimnames(alt)
head(alt)
alt
dimensions(alt)
dim(alt)
as.data.frame(alt)
as.matrix(alt, mode = "any")
dem = raster("~/projects/INRAE/data/dem2.tif")
dem = raster::raster("~/projects/INRAE/data/dem2.tif")
dem
as.matrix(dem)
dem = raster::raster("~/projects/INRAE/data/raster1.tif")
dem
as.matrix(dem)
library(raster)
r = raster::raster("~/projects/INRAE/data/raster1.tif")
r
as.matrix(r)
.rs.restartR()
library(sunlightRCPP)
hasShade(dem="dem2", timeUTC = "2022-08-21 8:56:00", targetResolution = 12.5)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 8:56:00", targetResolution = 12.5)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 8:56:00", targetResolution = 12.5)
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
library(sunlightRCPP)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 8:56:00", targetResolution = 12.5)
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
.rs.restartR()
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 8:56:00", targetResolution = 12.5)
dem="dem2.tif"
timeUTC = "2022-08-21 8:56:00"
targetResolution = 12.5
demDir = "~/projects/INRAE/data/"
altitudesDir = "~/projects/INRAE/data/altitudes/RCPP/"
outDir = "~/projects/INRAE/data/shademaps/RCPP/"
azimuthStep = 1
demFileAndPath = paste(demDir, dem, sep="")
print(paste(Sys.time(), " - ", "loading dem: ", dem, " from: ", demFileAndPath, sep=""))
dem_original = raster::raster(demFileAndPath)
dem_original
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 8:56:00", targetResolution = 12.5)
# 1. figure out sun position based on input raster
# load raster
demFileAndPath = paste(demDir, dem, sep="")
print(paste(Sys.time(), " - ", "loading dem: ", dem, " from: ", demFileAndPath, sep=""))
dem_original = raster::raster(demFileAndPath)
# figure out min/max azimuth
latlon <- as.data.frame(
sp::spTransform(
raster::xyFromCell(dem_original,c(1),spatial=TRUE),
sp::CRS("+proj=longlat")
)
)
lon = latlon$x
lat = latlon$y
print(paste(lon, lat, sep=" "))
datetime <- as.POSIXct(timeUTC,  tz = "UTC");
sun_position <- suncalc::getSunlightPosition(
date= datetime,
lat = lat,
lon = lon,
keep = c( "azimuth", "altitude")
)
print(sun_position)
azimuth = round(rad2deg(sun_position$azimuth)+180)
altitude = rad2deg(sun_position$altitude)
azimuth = round(azimuth / azimuthStep) * azimuthStep
print(paste(Sys.time(), " - ", "assumed sun position for given time. Azimuth (rounded): ", azimuth, " Altitude (degrees): ", altitude, sep = ""))
# 2. load corresponding altitudes file
altFilename = paste(
"azimuth-", azimuth,
"_dem-", tools::file_path_sans_ext(dem),
"_resolution-", targetResolution,
".tif",
sep=""
)
altFile = paste(altitudesDir, altFilename, sep="")
print(paste(Sys.time(), " - ", "loading altitude file (", altFilename, ")for given azimuth...", sep = ""))
altitudes <- raster::raster(altFile)
print(paste(Sys.time(), " - ", "calculating shades for altitude...", sep = ""))
startTS = Sys.time()
altitude
raster::maxValue(altitudes)
as.matrix(altitudes)
altitudes
raster::as.matrix(altitudes)
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 8:56:00", targetResolution = 12.5)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 8:56:00", targetResolution = 12.5)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 8:56:00", targetResolution = 12.5)
.rs.restartR()
library(sunlightRCPP)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 8:56:00", targetResolution = 12.5)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 8:56:00", targetResolution = 12.5)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 8:56:00", targetResolution = 12.5)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 8:56:00", targetResolution = 12.5)
.rs.restartR()
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 8:56:00", targetResolution = 12.5)
.rs.restartR()
.rs.restartR()
.rs.restartR()
.rs.restartR()
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 8:56:00", targetResolution = 12.5)
library(sunlightRCPP)
library(sunlightRCPP)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 8:56:00", targetResolution = 12.5)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 8:56:00", targetResolution = 12.5)
.rs.restartR()
library(sunlightRCPP)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 8:56:00", targetResolution = 12.5)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 8:56:00", targetResolution = 12.5)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 8:56:00", targetResolution = 12.5)
source("~/git/inrae/sunlightRCPP/R/hasShade.R")
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 8:56:00", targetResolution = 12.5)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 6:56:00", targetResolution = 12.5)
.rs.restartR()
.rs.restartR()
.rs.restartR()
.rs.restartR()
.rs.restartR()
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 6:56:00", targetResolution = 12.5)
library(sunlightRCPP)
library(sunlightRCPP)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 6:56:00", targetResolution = 12.5)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 6:56:00", targetResolution = 12.5)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 6:56:00", targetResolution = 12.5)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 7:56:00", targetResolution = 12.5)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 6:16:00", targetResolution = 12.5)
library(sunlightRCPP)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 6:16:00", targetResolution = 12.5)
hasShade(dem="dem2.tif", timeUTC = "2022-08-21 6:16:00", targetResolution = 12.5)
.rs.restartR()
.rs.restartR()
library(sunlightRCPP)
.rs.restartR()
library(sunlightRCPP)
sourceCpp("src/get_altitudes_for_azimuth.cpp")
source("~/git/inrae/sunlightRCPP/R/calculateMinAltitudes.R")
source("R/calculateMinAltitudes.R")
sourceCpp()()
sourceCpp()\
sourceCpp()
Rccp::sourceCpp()
Rcpp::sourceCpp()
Rcpp::sourceCpp("~/git/inrae/sunlightRCPP/src/get_altitudes_for_azimuth.cpp")
calculateMinAltitudes()
calculateMinAltitudes()
source("~/git/inrae/sunlightRCPP/R/calculateMinAltitudes.R")
calculateMinAltitudes()
precalcAltitudeDistances()
devtools::load_all(".")
precalcAltitudeDistances(dem='zi_dtm_12_5_complete_cutlim.tif', azimuthMin = 60, azimuthMax = 60, targetResolution = 625)
